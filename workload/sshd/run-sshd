#!/usr/bin/env bash
SSHD_PORT=7357
my_dir=`dirname $0`
my_dir=`cd $my_dir && pwd`

function port_has_listener {
	netstat -4 -an | grep LISTEN | cut -w -f 4 | grep -q "\.$1$"
}
port_has_listener $SSHD_PORT && { echo $0: port $SSHD_PORT is already in use >&2; exit 1 ;} 

# Launch the sshd workload.  SIGSTOP it asap, but after
# the exec() to allow the trace probes to be installed.
# -h needed for non-root sshd
# -d sshd debugging mode: do not fork sshd
# UsePrivilegeSeparation=no do not fork process with connecting user's priv
`which sshd` -o UsePrivilegeSeparation=no \
             -h ~/.ssh/id_rsa -d -p $SSHD_PORT 2>/dev/null &
sshd_pid=$!
sleep 0.1 && kill -STOP $sshd_pid

# Wait for SIGUSR1
function set_sigusr1_received {
	sigusr1_received=1
}
trap set_sigusr1_received SIGUSR1
sigusr1_received=0
while [ $sigusr1_received -eq 0 ] ; do
	sleep 0.5
done

# Resume the sshd workload process
kill -CONT $sshd_pid

# Connect the ssh client.  Await sshd to begin listening on $SSHD_PORT
# before connecting.
while ! port_has_listener $SSHD_PORT; do sleep 0.5; done
bash $my_dir/cipher.bash "-p $SSHD_PORT localhost" aes256-cbc >/dev/null

wait $sshd_pid
